apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
{{ include "generic-service.default-labels" . | indent 4 }}

spec:
  replicas: {{ .Values.replicas }}

  selector:
    matchLabels:
{{ include "generic-service.selector-labels" . | indent 6 }}

  {{- if not .Values.rollingUpdate }}
  strategy:
    type: Recreate
  {{- end}}

  template:
    metadata:
      labels:
{{ include "generic-service.default-labels" . | indent 8 }}
      annotations:
{{- if .Values.monitoring.enabled }}
        traffic.sidecar.istio.io/excludeInboundPorts: '{{ .Values.monitoring.port }}'
{{- end }}
{{- if .Values.secrets }}
        checksum/secrets: {{ .Values.secrets | toJson | sha256sum }}
{{- end }}
{{- if .Values.annotations }}
{{ .Values.annotations | toYaml | indent 8 }}
{{- end }}

    spec:
      volumes:
        {{- if or .Values.persistence.enabled }}
        - name: persistence
          persistentVolumeClaim:
            claimName: {{ .Values.name }}
        {{- end }}
        {{- range .Values.secrets }}
        - name: {{ .name }}
          secret:
            secretName: {{ .name }}
        {{- end }}

      imagePullSecrets:
        - name: '{{ .Values.image.registry }}'

      {{- if or .Values.rbac.roles .Values.rbac.clusterRoles }}
      serviceAccountName: {{ .Values.name }}
      {{- end }}


      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            # Never schedule multiple replicas on the same node
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
{{ include "generic-service.selector-labels" . | indent 18 }}
          preferredDuringSchedulingIgnoredDuringExecution:
            # Try to avoid scheduling multiple replicas in the same zone
            - weight: 100
              podAffinityTerm:
                topologyKey: failure-domain.beta.kubernetes.io/zone
                labelSelector:
                  matchLabels:
{{ include "generic-service.selector-labels" . | indent 20 }}

      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      tolerations:
        {{- range $key, $val := .Values.nodeSelector }}
        - key: {{ $key | quote }}
          operator: Equal
          value: {{ $val | quote }}
        {{- end }}
      {{- end }}

      containers:
        - name: {{ .Values.name }}
          image: '{{ required "Set image.registry" .Values.image.registry }}/{{ required "Set image.repository" .Values.image.repository }}:{{ required "Set image.tag" .Values.image.tag }}'
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: persistence
              mountPath: {{ required "Set persistence.mountPath" .Values.persistence.mountPath }}
            {{- end }}
            {{- range .Values.secrets }}
            - name: {{ .name }}
              mountPath: {{ required "Set secrets.mountPath" .mountPath }}
              {{- if .subPath }}
              subPath: {{ .subPath }}
              {{- end }}
            {{- end }}

          ports:
            {{- if .Values.ingress.enabled }}
            - name: http-ingress
              containerPort: {{ .Values.ingress.port }}

            {{- if .Values.ingress.grpcPort }}
            - name: grpc-ingress
              containerPort: {{ .Values.ingress.grpcPort }}
            {{- end }}

            {{- end }}

            {{- if .Values.monitoring.enabled }}
            - name: monitoring
              containerPort: {{ .Values.monitoring.port }}
            {{- end }}

          {{- if .Values.livenessProbe }}
          livenessProbe:
{{ toYaml .Values.livenessProbe | indent 12 }}
          {{- end }}

          {{- if .Values.readinessProbe }}
          readinessProbe:
{{ toYaml .Values.readinessProbe | indent 12 }}
          {{- end }}

          resources:
{{ toYaml .Values.resources | indent 12 }}

          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- range $key, $val := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $val | quote }}
            {{- end }}

          {{- if .Values.ingress.enabled }}
          # Delay shutdown to give ingress controller time to reroute traffic
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "5"]
          {{- end }}

        {{- if .Values.sidecars }}
{{ toYaml .Values.sidecars | indent 8 }}
        {{- end }}
